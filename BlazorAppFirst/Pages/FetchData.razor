@page "/fetchdata"
@inject HttpClient Http
@inject ILogger<FetchData> logger


@using BlazorAppFirst.Models
@using System.Globalization;


@*forecasts == null*@
@if (@headers != null || @registros != null)
{   <div style="width:100%; margin-bottom:20px;">
        <TablaComponent Title="@titulo" datos="@registros" columnValidation="@valdacionesRegex" colorDelete="#FFBFB1" colorEdit="#A5FF8B" colorInput="" colorText="" />
    </div>
}
else
{
    <p><em>Loading...</em></p>
    <p>La tabla no tiene datos !</p>
}
 
@code {

    string[] valdacionesRegex = new string[] {
        "^[0-9]+$",
        @"^[A-Za-z0-9\s.,!?:;\-\(\)]+$",
        @"/[0-9\.]", @"^[a-zA-Z0-9,.!?;:()@#$%&*\-\s]+$", 
        "^[0-9]+$", 
        @"^(https?://)?[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,}(\/[^\/]*)*\/([^\/]+\.(jpg|png|gif))$" };

    List<string> headers = new List<string>() { "Id", "Title", "Description", "CategoryId", "Image", "Marca", "Price" ,"estado"};
    public List<object> registros=new List<object>();

    public string titulo = "TABLA DINAMICA - EJEMPLO";

    protected override void OnInitialized()
    {
        for (int i = 1; i <= 30; i++)
        {
            Random random = new Random();
            bool estado = random.Next(2) == 0;
            Models.Product2 producto = new Models.Product2
                {
                    
                   
                    Id = i,
                    Title = "Producto " + i,
                    Price = Convert.ToDecimal("12,2"),
                    Description = "Este es el producto " + i,
                    CategoryId = i,
                    Image = "image" + i + ".jpg",
                    Marca = "Marca"+i,
                    Estado = estado
                };

            registros.Add(producto);
        }
    }

    
        
    
}
